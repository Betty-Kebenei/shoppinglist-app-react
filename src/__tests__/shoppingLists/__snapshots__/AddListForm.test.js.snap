// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`interface of AddListForm component should render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddListForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        onSubmit={undefined}
      >
        <FormGroup
          bsClass="form-group"
          controlId="Listname"
        >
          <ControlLabel
            bsClass="control-label"
            srOnly={false}
          >
            Listname
          </ControlLabel>
          <FormControl
            bsClass="form-control"
            componentClass="input"
            name="listname"
            onChange={undefined}
            placeholder="Enter listname"
            required={true}
            type="text"
            value={undefined}
          />
        </FormGroup>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="default"
          disabled={false}
          type="submit"
        >
          Submit
        </Button>
        <FormControlFeedback
          bsClass="form-control-feedback"
          bsRole="feedback"
        />
      </form>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <FormGroup
            bsClass="form-group"
            controlId="Listname"
          >
            <ControlLabel
              bsClass="control-label"
              srOnly={false}
            >
              Listname
            </ControlLabel>
            <FormControl
              bsClass="form-control"
              componentClass="input"
              name="listname"
              onChange={undefined}
              placeholder="Enter listname"
              required={true}
              type="text"
              value={undefined}
            />
          </FormGroup>,
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="default"
            disabled={false}
            type="submit"
          >
            Submit
          </Button>,
          <FormControlFeedback
            bsClass="form-control-feedback"
            bsRole="feedback"
          />,
        ],
        "onSubmit": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "form-group",
            "children": Array [
              <ControlLabel
                bsClass="control-label"
                srOnly={false}
              >
                Listname
              </ControlLabel>,
              <FormControl
                bsClass="form-control"
                componentClass="input"
                name="listname"
                onChange={undefined}
                placeholder="Enter listname"
                required={true}
                type="text"
                value={undefined}
              />,
            ],
            "controlId": "Listname",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "control-label",
                "children": "Listname",
                "srOnly": false,
              },
              "ref": null,
              "rendered": "Listname",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "form-control",
                "componentClass": "input",
                "name": "listname",
                "onChange": undefined,
                "placeholder": "Enter listname",
                "required": true,
                "type": "text",
                "value": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "active": false,
            "block": false,
            "bsClass": "btn",
            "bsStyle": "default",
            "children": "Submit",
            "disabled": false,
            "type": "submit",
          },
          "ref": null,
          "rendered": "Submit",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "form-control-feedback",
            "bsRole": "feedback",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          onSubmit={undefined}
        >
          <FormGroup
            bsClass="form-group"
            controlId="Listname"
          >
            <ControlLabel
              bsClass="control-label"
              srOnly={false}
            >
              Listname
            </ControlLabel>
            <FormControl
              bsClass="form-control"
              componentClass="input"
              name="listname"
              onChange={undefined}
              placeholder="Enter listname"
              required={true}
              type="text"
              value={undefined}
            />
          </FormGroup>
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="default"
            disabled={false}
            type="submit"
          >
            Submit
          </Button>
          <FormControlFeedback
            bsClass="form-control-feedback"
            bsRole="feedback"
          />
        </form>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <FormGroup
              bsClass="form-group"
              controlId="Listname"
            >
              <ControlLabel
                bsClass="control-label"
                srOnly={false}
              >
                Listname
              </ControlLabel>
              <FormControl
                bsClass="form-control"
                componentClass="input"
                name="listname"
                onChange={undefined}
                placeholder="Enter listname"
                required={true}
                type="text"
                value={undefined}
              />
            </FormGroup>,
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsStyle="default"
              disabled={false}
              type="submit"
            >
              Submit
            </Button>,
            <FormControlFeedback
              bsClass="form-control-feedback"
              bsRole="feedback"
            />,
          ],
          "onSubmit": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "form-group",
              "children": Array [
                <ControlLabel
                  bsClass="control-label"
                  srOnly={false}
                >
                  Listname
                </ControlLabel>,
                <FormControl
                  bsClass="form-control"
                  componentClass="input"
                  name="listname"
                  onChange={undefined}
                  placeholder="Enter listname"
                  required={true}
                  type="text"
                  value={undefined}
                />,
              ],
              "controlId": "Listname",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "control-label",
                  "children": "Listname",
                  "srOnly": false,
                },
                "ref": null,
                "rendered": "Listname",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "form-control",
                  "componentClass": "input",
                  "name": "listname",
                  "onChange": undefined,
                  "placeholder": "Enter listname",
                  "required": true,
                  "type": "text",
                  "value": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "active": false,
              "block": false,
              "bsClass": "btn",
              "bsStyle": "default",
              "children": "Submit",
              "disabled": false,
              "type": "submit",
            },
            "ref": null,
            "rendered": "Submit",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "form-control-feedback",
              "bsRole": "feedback",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
