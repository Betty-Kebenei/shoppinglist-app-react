// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`interface of UpdateListForm component should render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UpdateListForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <button
          className="btn glyphicon glyphicon-edit text-primary"
          data-placement="top"
          data-toggle="tooltip"
          onClick={[Function]}
          title="Update_List"
          type="button"
        />,
        <Modal
          animation={true}
          autoFocus={true}
          backdrop={true}
          bsClass="modal"
          dialogComponentClass={[Function]}
          enforceFocus={true}
          keyboard={true}
          manager={
            ModalManager {
              "add": [Function],
              "containers": Array [],
              "data": Array [],
              "handleContainerOverflow": true,
              "hideSiblingNodes": true,
              "isTopModal": [Function],
              "modals": Array [],
              "remove": [Function],
            }
          }
          onHide={[Function]}
          renderBackdrop={[Function]}
          restoreFocus={true}
          show={false}
        >
          <ModalHeader
            bsClass="modal-header"
            closeButton={true}
            closeLabel="Close"
          >
            <ModalTitle
              bsClass="modal-title"
              componentClass="h4"
            >
              Edit Shopping List
            </ModalTitle>
          </ModalHeader>
          <ModalBody
            bsClass="modal-body"
            componentClass="div"
          >
            <form
              onSubmit={[Function]}
            >
              <FormGroup
                bsClass="form-group"
                controlId="Listname"
              >
                <ControlLabel
                  bsClass="control-label"
                  srOnly={false}
                >
                  Listname
                </ControlLabel>
                <FormControl
                  bsClass="form-control"
                  componentClass="input"
                  name="listname"
                  onChange={[Function]}
                  placeholder="Enter listname"
                  required={true}
                  type="text"
                  value={undefined}
                />
              </FormGroup>
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="default"
                disabled={false}
                type="submit"
              >
                Submit
              </Button>
              <FormControlFeedback
                bsClass="form-control-feedback"
                bsRole="feedback"
              />
            </form>
          </ModalBody>
          <ModalFooter
            bsClass="modal-footer"
            componentClass="div"
          >
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsStyle="default"
              disabled={false}
              onClick={[Function]}
            >
              Close
            </Button>
          </ModalFooter>
        </Modal>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "btn glyphicon glyphicon-edit text-primary",
          "data-placement": "top",
          "data-toggle": "tooltip",
          "onClick": [Function],
          "title": "Update_List",
          "type": "button",
        },
        "ref": null,
        "rendered": null,
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "animation": true,
          "autoFocus": true,
          "backdrop": true,
          "bsClass": "modal",
          "children": Array [
            <ModalHeader
              bsClass="modal-header"
              closeButton={true}
              closeLabel="Close"
            >
              <ModalTitle
                bsClass="modal-title"
                componentClass="h4"
              >
                Edit Shopping List
              </ModalTitle>
            </ModalHeader>,
            <ModalBody
              bsClass="modal-body"
              componentClass="div"
            >
              <form
                onSubmit={[Function]}
              >
                <FormGroup
                  bsClass="form-group"
                  controlId="Listname"
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    Listname
                  </ControlLabel>
                  <FormControl
                    bsClass="form-control"
                    componentClass="input"
                    name="listname"
                    onChange={[Function]}
                    placeholder="Enter listname"
                    required={true}
                    type="text"
                    value={undefined}
                  />
                </FormGroup>
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  disabled={false}
                  type="submit"
                >
                  Submit
                </Button>
                <FormControlFeedback
                  bsClass="form-control-feedback"
                  bsRole="feedback"
                />
              </form>
            </ModalBody>,
            <ModalFooter
              bsClass="modal-footer"
              componentClass="div"
            >
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="default"
                disabled={false}
                onClick={[Function]}
              >
                Close
              </Button>
            </ModalFooter>,
          ],
          "dialogComponentClass": [Function],
          "enforceFocus": true,
          "keyboard": true,
          "manager": ModalManager {
            "add": [Function],
            "containers": Array [],
            "data": Array [],
            "handleContainerOverflow": true,
            "hideSiblingNodes": true,
            "isTopModal": [Function],
            "modals": Array [],
            "remove": [Function],
          },
          "onHide": [Function],
          "renderBackdrop": [Function],
          "restoreFocus": true,
          "show": false,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "modal-header",
              "children": <ModalTitle
                bsClass="modal-title"
                componentClass="h4"
              >
                Edit Shopping List
              </ModalTitle>,
              "closeButton": true,
              "closeLabel": "Close",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "modal-title",
                "children": "Edit Shopping List",
                "componentClass": "h4",
              },
              "ref": null,
              "rendered": "Edit Shopping List",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "modal-body",
              "children": <form
                onSubmit={[Function]}
              >
                <FormGroup
                  bsClass="form-group"
                  controlId="Listname"
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    Listname
                  </ControlLabel>
                  <FormControl
                    bsClass="form-control"
                    componentClass="input"
                    name="listname"
                    onChange={[Function]}
                    placeholder="Enter listname"
                    required={true}
                    type="text"
                    value={undefined}
                  />
                </FormGroup>
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  disabled={false}
                  type="submit"
                >
                  Submit
                </Button>
                <FormControlFeedback
                  bsClass="form-control-feedback"
                  bsRole="feedback"
                />
              </form>,
              "componentClass": "div",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <FormGroup
                    bsClass="form-group"
                    controlId="Listname"
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      Listname
                    </ControlLabel>
                    <FormControl
                      bsClass="form-control"
                      componentClass="input"
                      name="listname"
                      onChange={[Function]}
                      placeholder="Enter listname"
                      required={true}
                      type="text"
                      value={undefined}
                    />
                  </FormGroup>,
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="default"
                    disabled={false}
                    type="submit"
                  >
                    Submit
                  </Button>,
                  <FormControlFeedback
                    bsClass="form-control-feedback"
                    bsRole="feedback"
                  />,
                ],
                "onSubmit": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "form-group",
                    "children": Array [
                      <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
                      >
                        Listname
                      </ControlLabel>,
                      <FormControl
                        bsClass="form-control"
                        componentClass="input"
                        name="listname"
                        onChange={[Function]}
                        placeholder="Enter listname"
                        required={true}
                        type="text"
                        value={undefined}
                      />,
                    ],
                    "controlId": "Listname",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bsClass": "control-label",
                        "children": "Listname",
                        "srOnly": false,
                      },
                      "ref": null,
                      "rendered": "Listname",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bsClass": "form-control",
                        "componentClass": "input",
                        "name": "listname",
                        "onChange": [Function],
                        "placeholder": "Enter listname",
                        "required": true,
                        "type": "text",
                        "value": undefined,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "active": false,
                    "block": false,
                    "bsClass": "btn",
                    "bsStyle": "default",
                    "children": "Submit",
                    "disabled": false,
                    "type": "submit",
                  },
                  "ref": null,
                  "rendered": "Submit",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "form-control-feedback",
                    "bsRole": "feedback",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "form",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "modal-footer",
              "children": <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="default"
                disabled={false}
                onClick={[Function]}
              >
                Close
              </Button>,
              "componentClass": "div",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "active": false,
                "block": false,
                "bsClass": "btn",
                "bsStyle": "default",
                "children": "Close",
                "disabled": false,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Close",
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <button
            className="btn glyphicon glyphicon-edit text-primary"
            data-placement="top"
            data-toggle="tooltip"
            onClick={[Function]}
            title="Update_List"
            type="button"
          />,
          <Modal
            animation={true}
            autoFocus={true}
            backdrop={true}
            bsClass="modal"
            dialogComponentClass={[Function]}
            enforceFocus={true}
            keyboard={true}
            manager={
              ModalManager {
                "add": [Function],
                "containers": Array [],
                "data": Array [],
                "handleContainerOverflow": true,
                "hideSiblingNodes": true,
                "isTopModal": [Function],
                "modals": Array [],
                "remove": [Function],
              }
            }
            onHide={[Function]}
            renderBackdrop={[Function]}
            restoreFocus={true}
            show={false}
          >
            <ModalHeader
              bsClass="modal-header"
              closeButton={true}
              closeLabel="Close"
            >
              <ModalTitle
                bsClass="modal-title"
                componentClass="h4"
              >
                Edit Shopping List
              </ModalTitle>
            </ModalHeader>
            <ModalBody
              bsClass="modal-body"
              componentClass="div"
            >
              <form
                onSubmit={[Function]}
              >
                <FormGroup
                  bsClass="form-group"
                  controlId="Listname"
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    Listname
                  </ControlLabel>
                  <FormControl
                    bsClass="form-control"
                    componentClass="input"
                    name="listname"
                    onChange={[Function]}
                    placeholder="Enter listname"
                    required={true}
                    type="text"
                    value={undefined}
                  />
                </FormGroup>
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  disabled={false}
                  type="submit"
                >
                  Submit
                </Button>
                <FormControlFeedback
                  bsClass="form-control-feedback"
                  bsRole="feedback"
                />
              </form>
            </ModalBody>
            <ModalFooter
              bsClass="modal-footer"
              componentClass="div"
            >
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="default"
                disabled={false}
                onClick={[Function]}
              >
                Close
              </Button>
            </ModalFooter>
          </Modal>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "btn glyphicon glyphicon-edit text-primary",
            "data-placement": "top",
            "data-toggle": "tooltip",
            "onClick": [Function],
            "title": "Update_List",
            "type": "button",
          },
          "ref": null,
          "rendered": null,
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "animation": true,
            "autoFocus": true,
            "backdrop": true,
            "bsClass": "modal",
            "children": Array [
              <ModalHeader
                bsClass="modal-header"
                closeButton={true}
                closeLabel="Close"
              >
                <ModalTitle
                  bsClass="modal-title"
                  componentClass="h4"
                >
                  Edit Shopping List
                </ModalTitle>
              </ModalHeader>,
              <ModalBody
                bsClass="modal-body"
                componentClass="div"
              >
                <form
                  onSubmit={[Function]}
                >
                  <FormGroup
                    bsClass="form-group"
                    controlId="Listname"
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      Listname
                    </ControlLabel>
                    <FormControl
                      bsClass="form-control"
                      componentClass="input"
                      name="listname"
                      onChange={[Function]}
                      placeholder="Enter listname"
                      required={true}
                      type="text"
                      value={undefined}
                    />
                  </FormGroup>
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="default"
                    disabled={false}
                    type="submit"
                  >
                    Submit
                  </Button>
                  <FormControlFeedback
                    bsClass="form-control-feedback"
                    bsRole="feedback"
                  />
                </form>
              </ModalBody>,
              <ModalFooter
                bsClass="modal-footer"
                componentClass="div"
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  disabled={false}
                  onClick={[Function]}
                >
                  Close
                </Button>
              </ModalFooter>,
            ],
            "dialogComponentClass": [Function],
            "enforceFocus": true,
            "keyboard": true,
            "manager": ModalManager {
              "add": [Function],
              "containers": Array [],
              "data": Array [],
              "handleContainerOverflow": true,
              "hideSiblingNodes": true,
              "isTopModal": [Function],
              "modals": Array [],
              "remove": [Function],
            },
            "onHide": [Function],
            "renderBackdrop": [Function],
            "restoreFocus": true,
            "show": false,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "modal-header",
                "children": <ModalTitle
                  bsClass="modal-title"
                  componentClass="h4"
                >
                  Edit Shopping List
                </ModalTitle>,
                "closeButton": true,
                "closeLabel": "Close",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "modal-title",
                  "children": "Edit Shopping List",
                  "componentClass": "h4",
                },
                "ref": null,
                "rendered": "Edit Shopping List",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "modal-body",
                "children": <form
                  onSubmit={[Function]}
                >
                  <FormGroup
                    bsClass="form-group"
                    controlId="Listname"
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      Listname
                    </ControlLabel>
                    <FormControl
                      bsClass="form-control"
                      componentClass="input"
                      name="listname"
                      onChange={[Function]}
                      placeholder="Enter listname"
                      required={true}
                      type="text"
                      value={undefined}
                    />
                  </FormGroup>
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="default"
                    disabled={false}
                    type="submit"
                  >
                    Submit
                  </Button>
                  <FormControlFeedback
                    bsClass="form-control-feedback"
                    bsRole="feedback"
                  />
                </form>,
                "componentClass": "div",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <FormGroup
                      bsClass="form-group"
                      controlId="Listname"
                    >
                      <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
                      >
                        Listname
                      </ControlLabel>
                      <FormControl
                        bsClass="form-control"
                        componentClass="input"
                        name="listname"
                        onChange={[Function]}
                        placeholder="Enter listname"
                        required={true}
                        type="text"
                        value={undefined}
                      />
                    </FormGroup>,
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="default"
                      disabled={false}
                      type="submit"
                    >
                      Submit
                    </Button>,
                    <FormControlFeedback
                      bsClass="form-control-feedback"
                      bsRole="feedback"
                    />,
                  ],
                  "onSubmit": [Function],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "form-group",
                      "children": Array [
                        <ControlLabel
                          bsClass="control-label"
                          srOnly={false}
                        >
                          Listname
                        </ControlLabel>,
                        <FormControl
                          bsClass="form-control"
                          componentClass="input"
                          name="listname"
                          onChange={[Function]}
                          placeholder="Enter listname"
                          required={true}
                          type="text"
                          value={undefined}
                        />,
                      ],
                      "controlId": "Listname",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "bsClass": "control-label",
                          "children": "Listname",
                          "srOnly": false,
                        },
                        "ref": null,
                        "rendered": "Listname",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "bsClass": "form-control",
                          "componentClass": "input",
                          "name": "listname",
                          "onChange": [Function],
                          "placeholder": "Enter listname",
                          "required": true,
                          "type": "text",
                          "value": undefined,
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "active": false,
                      "block": false,
                      "bsClass": "btn",
                      "bsStyle": "default",
                      "children": "Submit",
                      "disabled": false,
                      "type": "submit",
                    },
                    "ref": null,
                    "rendered": "Submit",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "form-control-feedback",
                      "bsRole": "feedback",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "form",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "modal-footer",
                "children": <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  disabled={false}
                  onClick={[Function]}
                >
                  Close
                </Button>,
                "componentClass": "div",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "active": false,
                  "block": false,
                  "bsClass": "btn",
                  "bsStyle": "default",
                  "children": "Close",
                  "disabled": false,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Close",
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
